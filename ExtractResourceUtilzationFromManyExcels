Sub aaaCombinedGenerateResourceUtilization()

   CopyDataFromOtherExcels

   Application.Wait Now + TimeValue("00:00:01")

   CopyDataToSheet2

   Application.Wait Now + TimeValue("00:00:01")

   CopyPastePatternDataInSAMEsheet2

   CopyDataAcolumnToSheet3

   Application.Wait Now + TimeValue("00:00:01")

   CopyDataTOBCDcolumn

   Application.Wait Now + TimeValue("00:00:01")

   RemoveEXTRATextAndFormatting

   Application.Wait Now + TimeValue("00:00:01")

   InsertRowsAtBeginningInSheet3

   Application.Wait Now + TimeValue("00:00:01")

   AddTemplateHeadersInSheet3

   Application.Wait Now + TimeValue("00:00:01")

   AddBordersToCellinDATArangeSheet3

End Sub

Sub CopyDataFromOtherExcels()

    Dim currentWB As Workbook
    Dim currentWS As Worksheet
    Dim currentPath As String
    Dim currentFile As String
    Dim dataRange As Range
    Dim targetCell As Range
    Dim cell As Range
    Dim rowCount As Long
    Dim colCount As Long
    Dim sourceRowOffset As Long
    Dim sourceColOffset As Long
    Dim targetRowOffset As Long
    Dim targetColOffset As Long
    Dim lastRow As Long
    Dim lastColumn As Long
    Dim nextAvailableRow As Long
    Dim copyWithFormat As Boolean
    
    On Error GoTo ErrorHandler
    
    ' Set flag to determine whether to copy with formatting
    copyWithFormat = True ' Change to False to disable copying with formatting
    
    ' Set current workbook and worksheet
    Set currentWB = ThisWorkbook
    Set currentWS = Worksheets("Sheet1")
    currentWS.Cells.Clear
    ' Set current directory path
    currentPath = ThisWorkbook.Path
    
    ' Find next available row and column in current worksheet
    lastRow = currentWS.Cells(currentWS.Rows.Count, "A").End(xlUp).Row
    lastColumn = currentWS.Cells(1, currentWS.Columns.Count).End(xlToLeft).Column
    
    ' Calculate the next available row
    If lastRow = 1 And lastColumn = 1 And IsEmpty(currentWS.Cells(1, 1)) Then
        nextAvailableRow = 1
    Else
        nextAvailableRow = lastRow + 1
    End If
    
    ' Set target cell
    Set targetCell = currentWS.Cells(nextAvailableRow, "A")
    
 
    ' Loop through Excel files in current directory
    currentFile = Dir(currentPath & "\*.xls*")
    Do While currentFile <> ""
        ' Skip the current workbook
        If currentFile <> currentWB.Name Then
            ' Open the workbook
            Workbooks.Open Filename:=currentPath & "\" & currentFile
            ' Set data range from the specified cells
            Set dataRange = Workbooks(currentFile).ActiveSheet.Range("A1,A4,A5,C2,C3,D3,C4,D4,D5,C5,C6")
            
            ' Check if data range is empty
            If Not dataRange Is Nothing Then
                ' Get the size of the data range
                rowCount = dataRange.Rows.Count
                colCount = dataRange.Columns.Count
                
                ' Calculate row and column offsets for the target range
                sourceRowOffset = dataRange.Cells(1).Row - 1
                sourceColOffset = dataRange.Cells(1).Column - 1
                targetRowOffset = targetCell.Row - 1
                targetColOffset = targetCell.Column - 1
                
                ' Copy data to target range
                For Each cell In dataRange
                    currentWS.Cells(cell.Row + targetRowOffset - sourceRowOffset, cell.Column + targetColOffset - sourceColOffset).Value = cell.Value
                    If copyWithFormat Then
                        ' Copy formatting
                        cell.Copy
                        currentWS.Cells(cell.Row + targetRowOffset - sourceRowOffset, cell.Column + targetColOffset - sourceColOffset).PasteSpecial Paste:=xlPasteFormats
                        ' Copy color
                        currentWS.Cells(cell.Row + targetRowOffset - sourceRowOffset, cell.Column + targetColOffset - sourceColOffset).Interior.Color = cell.Interior.Color
                    End If
                Next cell
                
                ' Move target cell to the next available position
                Set targetCell = currentWS.Cells(nextAvailableRow + rowCount, "A")
            End If
            
            ' Close the opened workbook without saving changes
            Workbooks(currentFile).Close SaveChanges:=False
            
            ' Calculate the next available row for the next iteration
            nextAvailableRow = currentWS.Cells(currentWS.Rows.Count, "A").End(xlUp).Row + 2 ' Add an extra row for an empty line
            ' Set target cell for the next iteration
            Set targetCell = currentWS.Cells(nextAvailableRow, "A")
        End If
        ' Move to the next file
        currentFile = Dir
    Loop
    
    ' Autofit columns
    currentWS.Columns.AutoFit
    
    Exit Sub
    
ErrorHandler:
    MsgBox "An error occurred: " & Err.Description, vbExclamation
End Sub





Sub CopyDataToSheet2()
    Dim ws1 As Worksheet
    Dim ws2 As Worksheet
    Dim lastRow As Long
    
    'Check if Sheet2 exists, if not create it
    On Error Resume Next
    Set ws2 = Worksheets("Sheet2")
    ws2.Cells.Clear
    On Error GoTo 0
    
    If ws2 Is Nothing Then
        'Sheet2 does not exist, create it
        Set ws2 = Worksheets.Add
        ws2.Name = "Sheet2"
    End If
    
    'Set reference to Sheet1
    Set ws1 = ThisWorkbook.Worksheets("Sheet1")
    
    'Find the last row with data in Sheet1
    lastRow = ws1.Cells(ws1.Rows.Count, "A").End(xlUp).Row
    
    'Copy data from Sheet1 to Sheet2
    ws1.Range("A1:Z" & lastRow).Copy Destination:=ws2.Range("A1")
    'Autofit all rows in Sheet2
    ws2.Columns.AutoFit
    'Inform the user
    'MsgBox "Data copied from Sheet1 to Sheet2 successfully!", vbInformation
End Sub

Sub CopyPastePatternDataInSAMEsheet2()
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long
    
    ' Set the worksheet
    Set ws = ThisWorkbook.Sheets("Sheet2")
    
    ' Find the last row with data
    lastRow = ws.Cells(ws.Rows.Count, "C").End(xlUp).Row
    
    ' Loop through the rows and copy paste data
    For i = 5 To lastRow Step 6
        ' Copy data from C5 and D5 to E4 and F4
        ws.Range("C" & i & ":D" & i).Copy
        ws.Range("E" & i - 1 & ":F" & i - 1).PasteSpecial Paste:=xlPasteValues
        
        ' Copy data from C11 and D11 to F10 and D10
        ' ws.Range("C" & i + 6 & ":D" & i + 6).Copy
        ' ws.Range("F" & i + 5 & ":D" & i + 5).PasteSpecial Paste:=xlPasteValues
        
        ' Clear the clipboard
        Application.CutCopyMode = False
    Next i
End Sub


Sub CopyDataAcolumnToSheet3()
    Dim ws2 As Worksheet
    Dim ws3 As Worksheet
    Dim lastRow As Long
    Dim i As Long, j As Long
  
    
    ' Check if Sheet3 exists, if not, create it
    On Error Resume Next
    Set ws3 = Worksheets("Sheet3")
    On Error GoTo 0
    
    If ws3 Is Nothing Then
        Set ws3 = ThisWorkbook.Sheets.Add(After:= _
                 ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        ws3.Name = "Sheet3"
    End If
      ws3.Cells.Clear
    ' Copy data from Sheet2 to Sheet3
    Set ws2 = ThisWorkbook.Sheets("Sheet2")
    lastRow = ws2.Cells(ws2.Rows.Count, "A").End(xlUp).Row
    
    j = 1 ' Counter for rows in Sheet3
    For i = 1 To lastRow Step 6 ' Start from row 1, copy every 6th row
        ws2.Cells(i, 1).Copy ws3.Cells(j, 1)
        j = j + 1
    Next i
    
   ' MsgBox "Data copied successfully from Sheet2 to Sheet3.", vbInformation
End Sub


Sub CopyDataTOBCDcolumn()
    Dim sourceSheet As Worksheet
    Dim destSheet As Worksheet
    Dim i As Integer
    Dim sourceRow As Integer
    Dim destRow As Integer
    
    ' Set the source and destination sheets
    Set sourceSheet = ThisWorkbook.Sheets("Sheet2")
    Set destSheet = ThisWorkbook.Sheets("Sheet3")
    
    ' Initialize the destination row
    destRow = 1
    
    ' Loop through the rows in Sheet2 and copy data to Sheet3
    For i = 4 To sourceSheet.Cells(Rows.Count, "C").End(xlUp).Row Step 6
        ' Determine the source row
        sourceRow = i
        
        ' Copy data from Sheet2 to Sheet3
        destSheet.Cells(destRow, 2).Resize(1, 4).Value = sourceSheet.Cells(sourceRow, 3).Resize(1, 4).Value
        
        ' Increment the destination row
        destRow = destRow + 1
    Next i
    'Autofit all rows in Sheet2
    destSheet.Columns.AutoFit
    ' Notify user that data has been copied
    'MsgBox "Data copied successfully!", vbInformation
End Sub

Sub RemoveEXTRATextAndFormatting()
    Dim lastRow As Long
    Dim cell As Range
    
    ' Find the last row with data in column A of Sheet3
    lastRow = Sheets("Sheet3").Cells(Rows.Count, "A").End(xlUp).Row
    
    ' Loop through each cell in column A and remove text and formatting
    For Each cell In Sheets("Sheet3").Range("A1:A" & lastRow)
        cell.Value = Replace(cell.Value, "Server - Resource Utilization", "")
        cell.ClearFormats ' Remove formatting
    Next cell
End Sub
Sub AddTemplateHeadersInSheet3()
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Sheets("Sheet3") ' Adjust if you want to target a specific sheet
    
    ' Set headers
    ws.Range("A1:E1").Merge
    ws.Range("A1").Value = "Resource Utilization"
    ws.Range("A1").Font.Bold = True
    ws.Range("A1").Font.Size = 14
    ws.Range("A1").Interior.Color = RGB(184, 204, 228) ' Light blue background

    ws.Range("A2").Value = "Servers"
    ws.Range("B2:C2").Merge
    ws.Range("B2").Value = "Resource Utilization"
    ws.Range("D2:E2").Merge
    ws.Range("D2").Value = "Memory Utilization"
     ' Select cell A1
  With ws.Range("A1")
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlCenter
End With

    ws.Range("B3").Value = "Avg %"
    ws.Range("C3").Value = "Max %"
    ws.Range("D3").Value = "Avg %"
    ws.Range("E3").Value = "Max %"

    ' Format the cells
    With ws.Range("A2:E2")
        .Interior.Color = RGB(198, 239, 206) ' Light green background
        .Font.Bold = True
    End With
    
    With ws.Range("A3:E3")
        .Font.Bold = True
        .Interior.Color = RGB(198, 239, 206) ' Light green background
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlThin
    End With

    ' Set column widths
    ws.Columns("A").ColumnWidth = 15
    ws.Columns("B").ColumnWidth = 10
    ws.Columns("C").ColumnWidth = 10
    ws.Columns("D").ColumnWidth = 10
    ws.Columns("E").ColumnWidth = 10

' Clear any existing content in A2 and A3 on Sheet6
    ws.Range("A2:A3").ClearContents
    
    ' Merge cells A2 and A3 on Sheet6
    ws.Range("A2:A3").Merge
    
    ' Set the value of the merged cell to "SERVERS" on Sheet6
    ws.Range("A2").Value = "SERVERS"
    
    ' Center the text horizontally and vertically in the merged cell on Sheet6
    With ws.Range("A2")
        .HorizontalAlignment = xlCenter
        .VerticalAlignment = xlCenter
    End With
    
    ' Add border to the merged cell on Sheet6
    With ws.Range("A2:A3").Borders
        .LineStyle = xlContinuous
        .Weight = xlThin
    End With
    
'MsgBox "Processing done, ""Final Output in Sheet3""!", vbInformation
    
    ' Set values to the specified cells on Sheet6 (optional)
    'ws.Range("B2").Value = "ValueB2"
   'ws.Range("D2").Value = "ValueD2"
  '  ws.Range("B3").Value = "ValueB3"
  '  ws.Range("D3").Value = "ValueD3"
   ' ws.Range("E3").Value = "ValueE3"
    
    ' Add borders to the specified cells on Sheet6
      ' '  With ws.Range("B2, D2").Borders
      ' .LineStyle = xlContinuous
      '.Weight = xlThin
  ' End With
'
End Sub

Sub InsertRowsAtBeginningInSheet3()
    Dim ws As Worksheet
    ' Set the worksheet to Sheet3
    Set ws = ThisWorkbook.Sheets("Sheet3")
    
    ' Insert three rows at the beginning
    ws.Rows("1:3").Insert Shift:=xlDown, CopyOrigin:=xlFormatFromLeftOrAbove
End Sub

Sub AddBordersToCellinDATArangeSheet3()
    Dim ws As Worksheet
    Dim dataRange As Range
    Dim cell As Range
    
    ' Set the worksheet
    Set ws = ThisWorkbook.Sheets("Sheet3")
    
    ' Define the data range
    ' You can modify this range according to your specific needs
    Set dataRange = ws.UsedRange
    
    ' Loop through each cell in the data range and add borders
    For Each cell In dataRange
        With cell.Borders(xlEdgeLeft)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With cell.Borders(xlEdgeTop)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With cell.Borders(xlEdgeBottom)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With cell.Borders(xlEdgeRight)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With cell.Borders(xlInsideVertical)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
        With cell.Borders(xlInsideHorizontal)
            .LineStyle = xlContinuous
            .ColorIndex = 0
            .TintAndShade = 0
            .Weight = xlThin
        End With
    Next cell
    MsgBox "Processing done, ""Final Output in Sheet3""!", vbInformation
End Sub



